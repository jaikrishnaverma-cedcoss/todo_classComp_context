{"ast":null,"code":"var _jsxFileName = \"/home/cedcoss/Downloads/TodoWithToolkit-master (2)/src/classComponents/Main.jsx\";\nimport React, { Component } from \"react\";\nimport { MyContext } from \"../tools/MyContext\";\nimport Complete from \"./Complete\";\nimport Incomplete from \"./Incomplete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class Main extends Component {\n  constructor(props) {\n    super(props);\n    this.inpuRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    fetch('https://dummyjson.com/todos').then(response => response.json()).then(res => {\n      this.context.addtodoArr(res.todos);\n    });\n  }\n\n  render() {\n    const {\n      addAction,\n      state,\n      updateAction,\n      editMode\n    } = this.context; // form submitter and todo upadte add handler\n\n    const handleClick = () => {\n      if (state.index === -1) {\n        if (this.inpuRef.current.value !== \"\") addAction({\n          text: this.inpuRef.current.value,\n          status: \"Incomplete\"\n        });\n      } else {\n        updateAction({\n          text: this.inpuRef.current.value,\n          index: state.index\n        });\n      }\n\n      this.inpuRef.current.value = \"\";\n    }; // handle which row is going to edit\n\n\n    const editClick = index => {\n      this.inpuRef.current.value = state.todos[index].text;\n      editMode(index);\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: state.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"TODO LIST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          style: {\n            margin: \"10px 0px\"\n          },\n          onSubmit: e => e.preventDefault(),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"new-task\",\n            style: {\n              maxWidth: \"80%\"\n            },\n            type: \"text\",\n            value: state.Message,\n            ref: this.inpuRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"actioner\",\n            style: {\n              maxWidth: \"10%\"\n            },\n            name: state.eStatus,\n            index: state.index,\n            onClick: handleClick,\n            children: state.btnVal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Incomplete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          id: \"Incomplete\",\n          children: /*#__PURE__*/_jsxDEV(Incomplete, {\n            arr: state.todos,\n            editClick: editClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          id: \"Complete\",\n          children: /*#__PURE__*/_jsxDEV(Complete, {\n            arr: state.todos,\n            editClick: editClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 18\n      }, this)\n    }, void 0, false);\n  }\n\n}\nMain.contextType = MyContext;\nexport default Main;","map":{"version":3,"names":["React","Component","MyContext","Complete","Incomplete","Main","constructor","props","inpuRef","createRef","componentDidMount","fetch","then","response","json","res","context","addtodoArr","todos","render","addAction","state","updateAction","editMode","handleClick","index","current","value","text","status","editClick","loading","margin","e","preventDefault","maxWidth","Message","eStatus","btnVal","contextType"],"sources":["/home/cedcoss/Downloads/TodoWithToolkit-master (2)/src/classComponents/Main.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport { MyContext } from \"../tools/MyContext\";\nimport Complete from \"./Complete\";\nimport Incomplete from \"./Incomplete\";\n\nexport class Main extends Component {\n  static contextType = MyContext;\n  constructor(props) {\n    super(props);\n    this.inpuRef = React.createRef();\n  }\n  componentDidMount() {\n    fetch('https://dummyjson.com/todos')\n    .then((response) => response.json())\n    .then(res=>{\n        this.context.addtodoArr(res.todos)\n      });\n}\n\n  render() {\n    const { addAction, state, updateAction, editMode } = this.context;\n    // form submitter and todo upadte add handler\n    const handleClick = () => {\n      if (state.index === -1) {\n        if (this.inpuRef.current.value !== \"\")\n          addAction({ text: this.inpuRef.current.value, status: \"Incomplete\" });\n      } else {\n        updateAction({ text: this.inpuRef.current.value, index: state.index });\n      }\n      this.inpuRef.current.value = \"\";\n    };\n    // handle which row is going to edit\n    const editClick = (index) => {\n      this.inpuRef.current.value = state.todos[index].text;\n      editMode(index);\n    };\n    return (\n      <>\n        {\n          state.loading?<div className=\"container\">\n            <img src=\"\" alt=\"\" />\n          </div>:<div className=\"container\">\n          <h2>TODO LIST</h2>\n          <h3>Add Item</h3>\n          <form\n            style={{ margin: \"10px 0px\" }}\n            onSubmit={(e) => e.preventDefault()}\n          >\n            <input\n              id=\"new-task\"\n              style={{ maxWidth: \"80%\" }}\n              type=\"text\"\n              value={state.Message}\n              ref={this.inpuRef}\n            />\n            <button\n              id=\"actioner\"\n              style={{ maxWidth: \"10%\" }}\n              name={state.eStatus}\n              index={state.index}\n              onClick={handleClick}\n            >\n              {state.btnVal}\n            </button>\n          </form>\n\n          <h3>Todo</h3>\n          <h3>Incomplete</h3>\n          <ul id=\"Incomplete\">\n            <Incomplete arr={state.todos} editClick={editClick} />\n          </ul>\n          <h3>Complete</h3>\n          <ul id=\"Complete\">\n            <Complete arr={state.todos} editClick={editClick} />\n          </ul>\n        </div>\n        }\n      </>\n    );\n  }\n}\n\nexport default Main;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}