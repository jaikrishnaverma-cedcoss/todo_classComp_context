{"ast":null,"code":"var _jsxFileName = \"/home/cedcoss/Downloads/TodoWithToolkit-master (2)/src/classComponents/Incomplete.jsx\";\nimport React, { Component } from \"react\";\nimport { MyContext } from \"../tools/MyContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Incomplete extends Component {\n  render() {\n    const {\n      cheker,\n      deleteAction\n    } = this.context;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: this.props.arr.rev.map((data, i) => {\n        if (data.status === \"Complete\") return \"\";\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            index: i,\n            type: \"checkbox\",\n            name: \"incompleted\",\n            onClick: () => cheker({\n              status: \"Complete\",\n              index: i\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: data.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            type: \"text\",\n            id: \"name\",\n            className: \"name\",\n            value: data.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit\",\n            index: i,\n            name: \"incompleted\",\n            onClick: () => this.props.editClick(i),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteAction(i),\n            name: \"incompleted\",\n            className: \"delete\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), \" \"]\n        }, i + data.text, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false);\n  }\n\n}\nIncomplete.contextType = MyContext;","map":{"version":3,"names":["React","Component","MyContext","Incomplete","render","cheker","deleteAction","context","props","arr","rev","map","data","i","status","index","text","editClick","contextType"],"sources":["/home/cedcoss/Downloads/TodoWithToolkit-master (2)/src/classComponents/Incomplete.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport { MyContext } from \"../tools/MyContext\";\n\nexport default class Incomplete extends Component {\n  static contextType = MyContext;\n  render() {\n    const { cheker, deleteAction } = this.context;\n    return (\n      <>\n        {this.props.arr.rev.map((data, i) => {\n          if (data.status === \"Complete\") return \"\";\n          return (\n            <li key={i + data.text}>\n              {\" \"}\n              <input\n                index={i}\n                type=\"checkbox\"\n                name=\"incompleted\"\n                onClick={() => cheker({ status: \"Complete\", index: i })}\n              />\n              <label>{data.text}</label>\n              <p type=\"text\" id=\"name\" className=\"name\" value={data.text} />\n              <button\n                className=\"edit\"\n                index={i}\n                name=\"incompleted\"\n                onClick={() => this.props.editClick(i)}\n              >\n                Edit\n              </button>\n              <button\n                onClick={() => deleteAction(i)}\n                name=\"incompleted\"\n                className=\"delete\"\n              >\n                Delete\n              </button>{\" \"}\n            </li>\n          );\n        })}\n      </>\n    );\n  }\n}\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,oBAA1B;;;AAEA,eAAe,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;EAEhDG,MAAM,GAAG;IACP,MAAM;MAAEC,MAAF;MAAUC;IAAV,IAA2B,KAAKC,OAAtC;IACA,oBACE;MAAA,UACG,KAAKC,KAAL,CAAWC,GAAX,CAAeC,GAAf,CAAmBC,GAAnB,CAAuB,CAACC,IAAD,EAAOC,CAAP,KAAa;QACnC,IAAID,IAAI,CAACE,MAAL,KAAgB,UAApB,EAAgC,OAAO,EAAP;QAChC,oBACE;UAAA,WACG,GADH,eAEE;YACE,KAAK,EAAED,CADT;YAEE,IAAI,EAAC,UAFP;YAGE,IAAI,EAAC,aAHP;YAIE,OAAO,EAAE,MAAMR,MAAM,CAAC;cAAES,MAAM,EAAE,UAAV;cAAsBC,KAAK,EAAEF;YAA7B,CAAD;UAJvB;YAAA;YAAA;YAAA;UAAA,QAFF,eAQE;YAAA,UAAQD,IAAI,CAACI;UAAb;YAAA;YAAA;YAAA;UAAA,QARF,eASE;YAAG,IAAI,EAAC,MAAR;YAAe,EAAE,EAAC,MAAlB;YAAyB,SAAS,EAAC,MAAnC;YAA0C,KAAK,EAAEJ,IAAI,CAACI;UAAtD;YAAA;YAAA;YAAA;UAAA,QATF,eAUE;YACE,SAAS,EAAC,MADZ;YAEE,KAAK,EAAEH,CAFT;YAGE,IAAI,EAAC,aAHP;YAIE,OAAO,EAAE,MAAM,KAAKL,KAAL,CAAWS,SAAX,CAAqBJ,CAArB,CAJjB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAVF,eAkBE;YACE,OAAO,EAAE,MAAMP,YAAY,CAACO,CAAD,CAD7B;YAEE,IAAI,EAAC,aAFP;YAGE,SAAS,EAAC,QAHZ;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAlBF,EAwBY,GAxBZ;QAAA,GAASA,CAAC,GAAGD,IAAI,CAACI,IAAlB;UAAA;UAAA;UAAA;QAAA,QADF;MA4BD,CA9BA;IADH,iBADF;EAmCD;;AAvC+C;AAA7Bb,U,CACZe,W,GAAchB,S"},"metadata":{},"sourceType":"module"}