{"ast":null,"code":"var _jsxFileName = \"/home/cedcoss/Downloads/TodoWithToolkit-master (2)/src/classComponents/Complete.jsx\";\nimport React, { Component } from \"react\";\nimport { MyContext } from \"../tools/MyContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Complete extends Component {\n  render() {\n    const {\n      cheker,\n      deleteAction\n    } = this.context;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: this.props.arr.reverse().map((data, i) => {\n        if (data.status === \"Incomplete\") return \"\";else return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"completed\",\n            onClick: () => cheker({\n              status: \"Incomplete\",\n              index: i\n            }),\n            checked: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: data.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            type: \"text\",\n            id: \"name\",\n            className: \"name\",\n            value: data.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit\",\n            name: \"completed\",\n            onClick: () => this.props.editClick(i),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteAction(i),\n            index: i,\n            name: \"completed\",\n            className: \"delete\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this), \" \"]\n        }, i + data.text, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false);\n  }\n\n}\nComplete.contextType = MyContext;","map":{"version":3,"names":["React","Component","MyContext","Complete","render","cheker","deleteAction","context","props","arr","reverse","map","data","i","status","index","text","editClick","contextType"],"sources":["/home/cedcoss/Downloads/TodoWithToolkit-master (2)/src/classComponents/Complete.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport { MyContext } from \"../tools/MyContext\";\n\nexport default class Complete extends Component {\n  static contextType = MyContext;\n  render() {\n    const { cheker, deleteAction } = this.context;\n    return (\n      <>\n        {this.props.arr.reverse().map((data, i) => {\n          if (data.status === \"Incomplete\") return \"\";\n          else\n            return (\n              <li key={i + data.text}>\n                {\" \"}\n                <input\n                  type=\"checkbox\"\n                  name=\"completed\"\n                  onClick={() => cheker({ status: \"Incomplete\", index: i })}\n                  checked\n                />\n                <label>{data.text}</label>\n                <p type=\"text\" id=\"name\" className=\"name\" value={data.text} />\n                <button\n                  className=\"edit\"\n                  name=\"completed\"\n                  onClick={() => this.props.editClick(i)}\n                >\n                  Edit\n                </button>\n                <button\n                  onClick={() => deleteAction(i)}\n                  index={i}\n                  name=\"completed\"\n                  className=\"delete\"\n                >\n                  Delete\n                </button>{\" \"}\n              </li>\n            );\n        })}\n      </>\n    );\n  }\n}\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,oBAA1B;;;AAEA,eAAe,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;EAE9CG,MAAM,GAAG;IACP,MAAM;MAAEC,MAAF;MAAUC;IAAV,IAA2B,KAAKC,OAAtC;IACA,oBACE;MAAA,UACG,KAAKC,KAAL,CAAWC,GAAX,CAAeC,OAAf,GAAyBC,GAAzB,CAA6B,CAACC,IAAD,EAAOC,CAAP,KAAa;QACzC,IAAID,IAAI,CAACE,MAAL,KAAgB,YAApB,EAAkC,OAAO,EAAP,CAAlC,KAEE,oBACE;UAAA,WACG,GADH,eAEE;YACE,IAAI,EAAC,UADP;YAEE,IAAI,EAAC,WAFP;YAGE,OAAO,EAAE,MAAMT,MAAM,CAAC;cAAES,MAAM,EAAE,YAAV;cAAwBC,KAAK,EAAEF;YAA/B,CAAD,CAHvB;YAIE,OAAO;UAJT;YAAA;YAAA;YAAA;UAAA,QAFF,eAQE;YAAA,UAAQD,IAAI,CAACI;UAAb;YAAA;YAAA;YAAA;UAAA,QARF,eASE;YAAG,IAAI,EAAC,MAAR;YAAe,EAAE,EAAC,MAAlB;YAAyB,SAAS,EAAC,MAAnC;YAA0C,KAAK,EAAEJ,IAAI,CAACI;UAAtD;YAAA;YAAA;YAAA;UAAA,QATF,eAUE;YACE,SAAS,EAAC,MADZ;YAEE,IAAI,EAAC,WAFP;YAGE,OAAO,EAAE,MAAM,KAAKR,KAAL,CAAWS,SAAX,CAAqBJ,CAArB,CAHjB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAVF,eAiBE;YACE,OAAO,EAAE,MAAMP,YAAY,CAACO,CAAD,CAD7B;YAEE,KAAK,EAAEA,CAFT;YAGE,IAAI,EAAC,WAHP;YAIE,SAAS,EAAC,QAJZ;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAjBF,EAwBY,GAxBZ;QAAA,GAASA,CAAC,GAAGD,IAAI,CAACI,IAAlB;UAAA;UAAA;UAAA;QAAA,QADF;MA4BH,CA/BA;IADH,iBADF;EAoCD;;AAxC6C;AAA3Bb,Q,CACZe,W,GAAchB,S"},"metadata":{},"sourceType":"module"}