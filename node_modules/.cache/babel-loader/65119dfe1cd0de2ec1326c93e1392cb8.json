{"ast":null,"code":"var _jsxFileName = \"/home/cedcoss/Downloads/TodoWithToolkit-master (2)/src/classComponents/Main.jsx\";\nimport React, { Component } from 'react';\nimport { MyContext } from '../tools/MyContext';\nimport Complete from './Complete';\nimport Incomplete from './Incomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class Main extends Component {\n  constructor(props) {\n    super(props);\n    this.inpuRef = /*#__PURE__*/React.createRef();\n    this.toggleInputCase = this.toggleInputCase.bind(this);\n    this.state = {\n      uppercase: false\n    };\n  }\n\n  render() {\n    const {\n      addAction,\n      state,\n      updateAction,\n      editMode\n    } = this.context;\n\n    const handleClick = () => {\n      if (state.index === -1) {\n        if (this.inpuRef.current.value !== \"\") addAction({\n          text: this.inpuRef.current.value,\n          status: \"Incomplete\"\n        });\n      } else {\n        updateAction({\n          text: this.inpuRef.current.value,\n          index: state.index\n        });\n      }\n\n      this.inpuRef.current.value = '';\n    };\n\n    const editClick = index => {\n      this.inpuRef.current.value = state.todos[index].text;\n      editMode(index);\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"TODO LIST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"new-task\",\n            type: \"text\",\n            value: state.Message,\n            ref: elem => this.inpuRef = elem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"actioner\",\n            name: state.eStatus,\n            index: state.index,\n            onClick: handleClick,\n            children: state.btnVal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Incomplete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          id: \"Incomplete\",\n          children: /*#__PURE__*/_jsxDEV(Incomplete, {\n            arr: state.todos,\n            editClick: editClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          id: \"Complete\",\n          children: /*#__PURE__*/_jsxDEV(Complete, {\n            arr: state.todos,\n            editClick: editClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\nMain.contextType = MyContext;\nexport default Main;","map":{"version":3,"names":["React","Component","MyContext","Complete","Incomplete","Main","constructor","props","inpuRef","createRef","toggleInputCase","bind","state","uppercase","render","addAction","updateAction","editMode","context","handleClick","index","current","value","text","status","editClick","todos","Message","elem","eStatus","btnVal","contextType"],"sources":["/home/cedcoss/Downloads/TodoWithToolkit-master (2)/src/classComponents/Main.jsx"],"sourcesContent":["import React, { Component } from 'react'\nimport { MyContext } from '../tools/MyContext';\nimport Complete from './Complete';\nimport Incomplete from './Incomplete';\n\nexport class Main extends Component {\n    static contextType = MyContext\n    constructor(props) {\n        super(props);\n        this.inpuRef = React.createRef();\n        this.toggleInputCase = this.toggleInputCase.bind(this);\n        this.state = { uppercase: false };\n      }\n  render() {\n    const {addAction,state,updateAction,editMode} = this.context\n    const handleClick=()=>{\n        if (state.index === -1) {\n            if (this.inpuRef.current.value !== \"\")\n                addAction({text:this.inpuRef.current.value,status:\"Incomplete\"})\n        }\n        else {\n           updateAction({text:this.inpuRef.current.value,index:state.index})       \n        }\n        this.inpuRef.current.value=''\n    }\n    const editClick=(index)=>{\n        this.inpuRef.current.value=state.todos[index].text\n        editMode(index)\n        \n        }\n    return (\n        <>\n        <div className=\"container\">\n                        <h2>TODO LIST</h2>\n                        <h3>Add Item</h3>\n                        <p>\n                            <input id=\"new-task\" type=\"text\" value={state.Message} ref={elem=>this.inpuRef=elem} />\n                            <button id=\"actioner\" name={state.eStatus} index={state.index} onClick={handleClick}>{state.btnVal}</button>\n                        </p>\n    \n                        <h3>Todo</h3>\n                        <h3>Incomplete</h3>\n                        <ul id=\"Incomplete\">\n    \n                            <Incomplete arr={state.todos} editClick={editClick} />\n                        </ul>\n                        <h3>Complete</h3>\n                        <ul id=\"Complete\">\n    \n                            <Complete arr={state.todos} editClick={editClick} />\n                        </ul>\n    \n    \n                    </div>\n        </>\n    )\n  }\n}\n\nexport default Main"],"mappings":"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"},"metadata":{},"sourceType":"module"}